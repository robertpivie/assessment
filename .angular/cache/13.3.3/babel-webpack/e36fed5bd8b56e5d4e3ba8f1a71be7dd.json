{"ast":null,"code":"import { FormControl } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/bracket-tester.service\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@angular/common\";\n\nfunction InputComponent_p_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 3);\n    i0.ɵɵtext(1, \"This is the way!\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction InputComponent_p_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 4);\n    i0.ɵɵtext(1, \"You have chosen poorly!\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let InputComponent = /*#__PURE__*/(() => {\n  class InputComponent {\n    constructor(bracketTester) {\n      this.bracketTester = bracketTester;\n      this.bracketFormControl = new FormControl('', []);\n    }\n\n    ngOnInit() {}\n\n    check($event) {\n      const isValid = this.bracketTester.test(this.getValueFromEvent($event));\n\n      if (isValid) {\n        this.setBalancedMessage();\n      } else {\n        this.setUnbalancedMessage();\n      }\n    }\n\n    getValueFromEvent($event) {\n      var _a;\n\n      return ((_a = $event === null || $event === void 0 ? void 0 : $event.target) === null || _a === void 0 ? void 0 : _a.value) || \"\";\n    }\n\n    setUnbalancedMessage() {\n      this.bracketFormControl.setErrors({\n        'unbalanced': true\n      });\n    }\n\n    setBalancedMessage() {\n      this.bracketFormControl.setErrors(null);\n    }\n\n  }\n\n  InputComponent.ɵfac = function InputComponent_Factory(t) {\n    return new (t || InputComponent)(i0.ɵɵdirectiveInject(i1.BracketTesterService));\n  };\n\n  InputComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: InputComponent,\n    selectors: [[\"app-input\"]],\n    decls: 3,\n    vars: 3,\n    consts: [[\"type\", \"text\", \"placeholder\", \"{}\", 3, \"formControl\", \"keyup\"], [\"class\", \"is-valid\", 4, \"ngIf\"], [\"class\", \"is-not-valid\", 4, \"ngIf\"], [1, \"is-valid\"], [1, \"is-not-valid\"]],\n    template: function InputComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"textarea\", 0);\n        i0.ɵɵlistener(\"keyup\", function InputComponent_Template_textarea_keyup_0_listener($event) {\n          return ctx.check($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(1, InputComponent_p_1_Template, 2, 0, \"p\", 1);\n        i0.ɵɵtemplate(2, InputComponent_p_2_Template, 2, 0, \"p\", 2);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formControl\", ctx.bracketFormControl);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.bracketFormControl.valid);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.bracketFormControl.valid);\n      }\n    },\n    directives: [i2.DefaultValueAccessor, i2.NgControlStatus, i2.FormControlDirective, i3.NgIf],\n    styles: [\"textarea[_ngcontent-%COMP%]{width:100%;height:100px}.is-valid[_ngcontent-%COMP%]{color:green}.is-not-valid[_ngcontent-%COMP%]{color:red}\"]\n  });\n  return InputComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}